generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URL")
}

model User {
    id       String  @id @default(cuid())
    name     String
    email    String  @unique
    role     Role    @default(MENTEE)
    phoneNo  String?
    rollNo   String?
    image    String?
    password String

    bio String?

    githubId       String? @unique
    githubUsername String?
    githubToken    String?

    createdAt          DateTime @default(now())
    lastPasswordChange DateTime @default(now())
    isActive           Boolean  @default(true)

    Mentor Mentor[]

    Mentee Mentee[]
}

model Mentee {
    id   String @id
    user User   @relation(fields: [id], references: [id])

    Team      Team[]
    leadTeams Team[] @relation(name: "TeamLeader")
    teams     Team[] @relation(name: "TeamMembers")
}

model Mentor {
    id   String @id
    user User   @relation(fields: [id], references: [id])

    Project Project[]
}

enum Role {
    MENTOR
    MENTEE
}

model Project {
    id          String   @id @default(cuid())
    title       String
    description String?
    status      Status   @default(PENDING)
    isPrivate   Boolean  @default(false)
    repository  String?
    githubtoken String?
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    isactive    Boolean  @default(true)
    mentor      Mentor[]

    team   Team   @relation(fields: [teamId], references: [id])
    teamId String

    Task Task[]

    ProjectReport ProjectReport[]
}

enum Status {
    PENDING
    ONGOING
    COMPLETED
}

model Team {
    id           String    @id @default(cuid())
    name         String
    description  String?
    teamLeader   Mentee    @relation(fields: [teamLeaderId], references: [id], name: "TeamLeader")
    teamLeaderId String
    members      Mentee[]  @relation(name: "TeamMembers")
    isactive     Boolean   @default(true)
    createdAt    DateTime  @default(now())
    maxMembers   Int       @default(4)
    joinCode     String    @unique @default(cuid())
    class        String?
    semester     String?
    Project      Project[]
    Mentee       Mentee[]
    freezed      Boolean?   @default(false)

    @@index([joinCode])
}

model Task {
    id          String   @id @default(cuid())
    title       String
    description String?
    status      Status   @default(PENDING)
    createdAt   DateTime @default(now())
    dueDate     DateTime
    grade       Int?
    remarks     String?

    project   Project @relation(fields: [projectid], references: [id])
    projectid String
}

model ProjectReport {
    id          String    @id @default(cuid())
    projectId   String
    project     Project   @relation(fields: [projectId], references: [id])
    description String
    grade       Int?
    submittedAt DateTime? @default(now())
}
